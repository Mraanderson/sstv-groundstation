install_service() {
  echo "Prechecking required folders..."

  # Check and create app directory
  if [ ! -d "$APP_DIR" ]; then
    msg "$RED" "App directory '$APP_DIR' does not exist."
    read -p "Create it now? (y/n): " create_app
    if [[ "$create_app" =~ ^[Yy]$ ]]; then
      mkdir -p "$APP_DIR"
      msg "$GREEN" "Created app directory: $APP_DIR"
    else
      msg "$RED" "Cannot proceed without app directory. Aborting."
      return
    fi
  fi

  # Check and create systemd user config directory
  local systemd_user_dir="$HOME/.config/systemd/user"
  if [ ! -d "$systemd_user_dir" ]; then
    msg "$RED" "Systemd user directory '$systemd_user_dir' does not exist."
    read -p "Create it now? (y/n): " create_systemd
    if [[ "$create_systemd" =~ ^[Yy]$ ]]; then
      mkdir -p "$systemd_user_dir"
      msg "$GREEN" "Created systemd user directory: $systemd_user_dir"
    else
      msg "$RED" "Cannot proceed without systemd directory. Aborting."
      return
    fi
  fi

  # Confirm installation
  echo
  read -p "Proceed with installing the systemd service? (y/n): " confirm_install
  if [[ ! "$confirm_install" =~ ^[Yy]$ ]]; then
    msg "$RED" "Installation cancelled by user."
    return
  fi

  # Create the service file
  cat > "$SERVICE_FILE" <<EOF
[Unit]
Description=SSTV Groundstation Web App

[Service]
Type=simple
ExecStart=$APP_DIR/launcher.sh -r
Restart=on-failure

[Install]
WantedBy=default.target
EOF

  systemctl --user daemon-reexec
  systemctl --user enable sstv-groundstation
  msg "$GREEN" "Systemd service installed and enabled."

  # Optional start
  echo
  echo "To start the service now, run:"
  echo "  systemctl --user start sstv-groundstation"
  read -p "Would you like to start it now? (y/n): " start_now
  if [[ "$start_now" =~ ^[Yy]$ ]]; then
    systemctl --user start sstv-groundstation && msg "$GREEN" "Service started."
  else
    msg "$RED" "Service not started. You can start it later with:"
    echo "  systemctl --user start sstv-groundstation"
  fi
}
